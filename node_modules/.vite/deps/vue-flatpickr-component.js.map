{
  "version": 3,
  "sources": ["../../vue-flatpickr-component/dist/esm/events.js", "../../vue-flatpickr-component/dist/esm/util.js", "../../vue-flatpickr-component/dist/esm/component.js", "../../vue-flatpickr-component/dist/esm/index.js"],
  "sourcesContent": ["const includedEvents = [\r\n    'onChange',\r\n    'onClose',\r\n    'onDestroy',\r\n    'onMonthChange',\r\n    'onOpen',\r\n    'onYearChange',\r\n];\r\n// Let's not emit these events by default\r\nconst excludedEvents = [\r\n    'onValueUpdate',\r\n    'onDayCreate',\r\n    'onParseConfig',\r\n    'onReady',\r\n    'onPreCalendarPosition',\r\n    'onKeyDown',\r\n];\r\nexport { includedEvents, excludedEvents };\r\n", "function camelToKebab(string) {\r\n    return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\nfunction arrayify(obj) {\r\n    return obj instanceof Array\r\n        ? obj\r\n        : [obj];\r\n}\r\nfunction nullify(value) {\r\n    return (value && value.length)\r\n        ? value\r\n        : null;\r\n}\r\nexport { camelToKebab, nullify, arrayify };\r\n", "import flatpickr from 'flatpickr';\r\nimport { defineComponent, h, nextTick } from 'vue';\r\nimport { excludedEvents, includedEvents } from './events';\r\nimport { camelToKebab, nullify, arrayify } from './util';\r\n// Keep a copy of all events for later use\r\nconst allEvents = [...includedEvents, ...excludedEvents];\r\n// Passing these properties in `fp.set()` method will cause flatpickr to trigger some callbacks\r\nconst configCallbacks = ['locale', 'showMonths'];\r\nexport default defineComponent({\r\n    name: 'FlatPickr',\r\n    compatConfig: {\r\n        MODE: 3,\r\n    },\r\n    render() {\r\n        return h('input', {\r\n            type: 'text',\r\n            'data-input': true,\r\n            disabled: this.disabled,\r\n            onInput: this.onInput,\r\n        });\r\n    },\r\n    emits: [\r\n        'blur',\r\n        'update:modelValue',\r\n        ...allEvents.map(camelToKebab)\r\n    ],\r\n    props: {\r\n        modelValue: {\r\n            type: [String, Number, Date, Array, null],\r\n            required: true,\r\n        },\r\n        // https://flatpickr.js.org/options/\r\n        config: {\r\n            type: Object,\r\n            default: () => ({\r\n                defaultDate: null,\r\n                wrap: false,\r\n            })\r\n        },\r\n        events: {\r\n            type: Array,\r\n            default: () => includedEvents\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            fp: null, //todo make it non-reactive\r\n        };\r\n    },\r\n    mounted() {\r\n        // Return early if flatpickr is already loaded\r\n        /* istanbul ignore if */\r\n        if (this.fp)\r\n            return;\r\n        // Init flatpickr\r\n        this.fp = flatpickr(this.getElem(), this.prepareConfig());\r\n        // Attach blur event\r\n        this.fpInput().addEventListener('blur', this.onBlur);\r\n        // Immediate watch will fail before fp is set,\r\n        // so we need to start watching after mount\r\n        this.$watch('disabled', this.watchDisabled, {\r\n            immediate: true\r\n        });\r\n    },\r\n    methods: {\r\n        prepareConfig() {\r\n            // Don't mutate original object on parent component\r\n            let safeConfig = Object.assign({}, this.config);\r\n            this.events.forEach((hook) => {\r\n                // Respect global callbacks registered via setDefault() method\r\n                let globalCallbacks = flatpickr.defaultConfig[hook] || [];\r\n                // Inject our own method along with user's callbacks\r\n                let localCallback = (...args) => {\r\n                    this.$emit(camelToKebab(hook), ...args);\r\n                };\r\n                // Overwrite with merged array\r\n                safeConfig[hook] = arrayify(safeConfig[hook] || []).concat(globalCallbacks, localCallback);\r\n            });\r\n            const onCloseCb = this.onClose.bind(this);\r\n            safeConfig['onClose'] = arrayify(safeConfig['onClose'] || []).concat(onCloseCb);\r\n            // Set initial date without emitting any event\r\n            safeConfig.defaultDate = this.modelValue || safeConfig.defaultDate;\r\n            return safeConfig;\r\n        },\r\n        /**\r\n         * Get the HTML node where flatpickr to be attached\r\n         * Bind on parent element if wrap is true\r\n         */\r\n        getElem() {\r\n            return this.config.wrap ? this.$el.parentNode : this.$el;\r\n        },\r\n        /**\r\n         * Watch for value changed by date-picker itself and notify parent component\r\n         */\r\n        onInput(event) {\r\n            const input = event.target;\r\n            // Let's wait for DOM to be updated\r\n            nextTick().then(() => {\r\n                this.$emit('update:modelValue', nullify(input.value));\r\n            });\r\n        },\r\n        fpInput() {\r\n            return this.fp.altInput || this.fp.input;\r\n        },\r\n        /**\r\n         * Blur event is required by many validation libraries\r\n         */\r\n        onBlur(event) {\r\n            this.$emit('blur', nullify(event.target.value));\r\n        },\r\n        /**\r\n         * Flatpickr does not emit input event in some cases\r\n         */\r\n        onClose(selectedDates, dateStr) {\r\n            this.$emit('update:modelValue', dateStr);\r\n        },\r\n        /**\r\n         * Watch for the disabled property and sets the value to the real input.\r\n         */\r\n        watchDisabled(newState) {\r\n            if (newState) {\r\n                this.fpInput().setAttribute('disabled', '');\r\n            }\r\n            else {\r\n                this.fpInput().removeAttribute('disabled');\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        /**\r\n         * Watch for any config changes and redraw date-picker\r\n         */\r\n        config: {\r\n            deep: true,\r\n            handler(newConfig) {\r\n                if (!this.fp)\r\n                    return;\r\n                let safeConfig = Object.assign({}, newConfig);\r\n                // Workaround: Don't pass hooks to configs again otherwise\r\n                // previously registered hooks will stop working\r\n                // Notice: we are looping through all events\r\n                // This also means that new callbacks can not be passed once component has been initialized\r\n                allEvents.forEach((hook) => {\r\n                    delete safeConfig[hook];\r\n                });\r\n                this.fp.set(safeConfig);\r\n                // Workaround: Allow to change locale dynamically\r\n                configCallbacks.forEach((name) => {\r\n                    if (typeof safeConfig[name] !== 'undefined') {\r\n                        this.fp.set(name, safeConfig[name]);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        /**\r\n         * Watch for changes from parent component and update DOM\r\n         */\r\n        modelValue(newValue) {\r\n            var _a;\r\n            // Prevent updates if v-model value is same as input's current value\r\n            if (!this.$el || newValue === nullify(this.$el.value))\r\n                return;\r\n            // Notify flatpickr instance that there is a change in value\r\n            (_a = this.fp) === null || _a === void 0 ? void 0 : _a.setDate(newValue, true);\r\n        }\r\n    },\r\n    beforeUnmount() {\r\n        /* istanbul ignore else */\r\n        if (!this.fp)\r\n            return;\r\n        this.fpInput().removeEventListener('blur', this.onBlur);\r\n        this.fp.destroy();\r\n        this.fp = null;\r\n    }\r\n});\r\n", "import Component from './component';\r\nexport default Component;\r\n"],
  "mappings": "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",
  "names": ["esm_default"]
}
